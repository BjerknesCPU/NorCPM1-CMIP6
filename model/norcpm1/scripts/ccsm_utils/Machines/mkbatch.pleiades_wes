#! /bin/csh -f

set mach = pleiades_wes

#################################################################################
if ($PHASE == set_batch) then
#################################################################################

source ./Tools/ccsm_getenv || exit -1

set pbsrs = `${UTILROOT}/Tools/taskmaker.pl -pbsrs`

set tlimit = "05:19:00"

#--- Job name is first fifteen characters of case name ---
set jobname = `echo ${CASE} | cut -c1-15`

if ($?ACCOUNT) then
  set account_name = $ACCOUNT
else
  # could set this from the linux id command..
  set account_name = group_id 
  if (-e ~/.ccsm_proj) then
     set account_name = `head -1 ~/.ccsm_proj`
  endif
endif

if ($?QUEUE) then
  set queue_name = $QUEUE
else
  set queue_name = normal
endif

cat >! $CASEROOT/${CASE}.${mach}.run << EOF1
#!/bin/csh -f

#PBS -S /bin/csh
#PBS -W group_list=${account_name}
#PBS -N ${jobname}
#PBS -q ${queue_name}
#PBS -j oe
#PBS -l select=${pbsrs}
#PBS -l walltime=${tlimit}
#PBS -l place=scatter:excl

#limit coredumpsize 1000000
#

limit stacksize unlimited

EOF1

#################################################################################
else if ($PHASE == set_exe) then
#################################################################################

set maxthrds = `${UTILROOT}/Tools/taskmaker.pl -maxthrds`
set maxtasks = `${UTILROOT}/Tools/taskmaker.pl -sumtasks`

cat >> ${CASEROOT}/${CASE}.${MACH}.run << EOF1
# -------------------------------------------------------------------------
# Run the model
# -------------------------------------------------------------------------

sleep 25
cd \$RUNDIR
echo "\`date\` -- CSM EXECUTION BEGINS HERE" 

if (\$USE_MPISERIAL == "FALSE") then
   mpirun_rsh -np ${maxtasks} -hostfile \$PBS_NODEFILE \\
   KMP_AFFINITY=noverbose,disabled \\
   MV2_ENABLE_AFFINITY=0 \\
   VIADEV_USE_AFFINITY=0 \\
   OMP_NUM_THREADS=${maxthrds} \\
   KMP_STACKSIZE=64M \\
   ./ccsm.exe >&! ccsm.log.\$LID

   wait
else
   ./ccsm.exe >&! ccsm.log.\$LID
endif
echo "\`date\` -- CSM EXECUTION HAS FINISHED" 

EOF1


#################################################################################
else if ($PHASE == set_larch) then
#################################################################################

if (-e ${CASEROOT}/${CASE}.${mach}.l_archive) then
   echo ERROR: generate_batch.csh file ${CASE}.${mach}.l_archive already exists in ${CASEROOT}
   exit -1
endif

# Create the archive script
touch ${CASEROOT}/${CASE}.${mach}.l_archive
chmod 775 ${CASEROOT}/${CASE}.${mach}.l_archive

if ($?ACCOUNT) then
  set account_name = $ACCOUNT
else
  # could set this from the linux id command..
  set account_name = group_id 
  if (-e ~/.ccsm_proj) then
     set account_name = `head -1 ~/.ccsm_proj`
  endif
endif

cat >! $CASEROOT/${CASE}.${mach}.l_archive << EOF1
#! /bin/csh -f
#===============================================================================
#  This is a CCSM coupled model batch long term archiving script
#===============================================================================

#PBS -S /bin/csh
#PBS -N l_archive
#PBS -W group_list=${account_name}
#PBS -q normal
#PBS -j oe
#PBS -l select=1
#PBS -l walltime=04:00:00

#-----------------------------------------------------------------------
# Determine necessary environment variables
#-----------------------------------------------------------------------

cd $CASEROOT 

source ./Tools/ccsm_getenv || exit -1

echo "MACH = \$MACH"

#----------------------------------------------
# run the long term archiver
#----------------------------------------------

setenv LID "\`date +%y%m%d-%H%M%S\`"

# copy output files to lou -- the NAS long-term archiving system
cd \$DOUT_S_ROOT
foreach dirl1 (\`/bin/ls -1\`)
    if (-d \$DOUT_S_ROOT/\${dirl1}) then
       \$CASETOOLS/ccsm_l_archive.csh \${dirl1} &
    endif
end
wait
exit 0


EOF1

#################################################################################
else
#################################################################################

    echo "mkscripts.$mach"
    echo "  PHASE setting of $PHASE is not an accepted value"
    echo "  accepted values are set_batch, set_exe and set_larch"
    exit 1

#################################################################################
endif
#################################################################################
