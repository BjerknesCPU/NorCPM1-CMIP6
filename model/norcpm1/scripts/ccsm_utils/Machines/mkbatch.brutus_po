#! /bin/csh -f

set mach = brutus_po

#################################################################################
if ($PHASE == set_batch) then
#################################################################################

source ./Tools/ccsm_getenv || exit -1

set ntasks  = `${UTILROOT}/Tools/taskmaker.pl -sumonly`
set maxthrds = `${UTILROOT}/Tools/taskmaker.pl -maxthrds`
@ nodes = $ntasks / ${MAX_TASKS_PER_NODE}
if ( $ntasks % ${MAX_TASKS_PER_NODE} > 0) then
  @ nodes = $nodes + 1
  @ ntasks = $nodes * ${MAX_TASKS_PER_NODE}
endif
@ taskpernode = ${MAX_TASKS_PER_NODE} / ${maxthrds}
set qname = batch
set tlimit = "00:59:00"

set mpp = `${UTILROOT}/Tools/taskmaker.pl -sumpes`

#--- Job name is first fifteen characters of case name ---
set jobname = `echo ${CASE} | cut -c1-15`

cat >! $CASEROOT/${CASE}.${mach}.run << EOF1
#!/bin/csh -f
#===============================================================================
# GENERIC_USER
# This is where the batch submission is set.  The above code computes
# the total number of tasks, nodes, and other things that can be useful
# here.  Use PBS, BSUB, or whatever the local environment supports.
#===============================================================================

#BSUB -J $CASE
#BSUB -n $mpp
#BSUB -W 7:59
#BSUB -o out.%J
#BSUB -e err.%J

# MPI jobs on brutus can run on different processors: Opteron 8220, 8380 or 8384
# To choose a specific processor type, remove one "#" from the line below

##BSUB -R "select[model==Opteron8384]"
##BSUB -R "select[model==Opteron8380]"
##BSUB -R "select[model==Opteron8220]"

##BSUB -l nodes=${nodes}:ppn=${taskpernode}:walltime=${tlimit}
##BSUB -q ${qname}
##BSUB -k eo

#limit coredumpsize 1000000
#limit stacksize unlimited

# not all run scripts contain mpirun command
mpirun sorry_for_the_fake___just_ignore_this >&/dev/null

EOF1

#################################################################################
else if ($PHASE == set_exe) then
#################################################################################

set maxthrds = `${UTILROOT}/Tools/taskmaker.pl -maxthrds`
set maxtasks = `${UTILROOT}/Tools/taskmaker.pl -sumtasks`

cat >> ${CASEROOT}/${CASE}.${MACH}.run << EOF1
# -------------------------------------------------------------------------
# Run the model
# -------------------------------------------------------------------------

sleep 25
cd \$RUNDIR
echo "\`date\` -- CSM EXECUTION BEGINS HERE" 

#===============================================================================
# GENERIC_USER
# Launch the job here.  Some samples are commented out below
#===============================================================================

setenv OMP_NUM_THREADS ${maxthrds}
if (\$USE_MPISERIAL == "FALSE") then
   mpirun -np ${maxtasks} --bind-to-core --bysocket ./ccsm.exe >&! ccsm.log.\$LID
   #mpirun -np ${maxtasks} ./ccsm.exe >&! ccsm.log.\$LID
   #ompirun ./ccsm.exe >&! ccsm.log.\$LID
   #mpiexec -n ${maxtasks} ./ccsm.exe >&! ccsm.log.\$LID
else
                                                    ./ccsm.exe >&! ccsm.log.\$LID
endif

wait
echo "\`date\` -- CSM EXECUTION HAS FINISHED" 

EOF1


#################################################################################
else if ($PHASE == set_larch) then
#################################################################################


   #This is a place holder for a long-term archiving script


#################################################################################
else
#################################################################################

    echo "mkscripts.$mach"
    echo "  PHASE setting of $PHASE is not an accepted value"
    echo "  accepted values are set_batch, set_exe and set_larch"
    exit 1

#################################################################################
endif
#################################################################################
